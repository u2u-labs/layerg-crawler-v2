// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/sqlc-dev/pqtype"
)

type AssetType string

const (
	AssetTypeERC721  AssetType = "ERC721"
	AssetTypeERC1155 AssetType = "ERC1155"
	AssetTypeERC20   AssetType = "ERC20"
)

func (e *AssetType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AssetType(s)
	case string:
		*e = AssetType(s)
	default:
		return fmt.Errorf("unsupported scan type for AssetType: %T", src)
	}
	return nil
}

type NullAssetType struct {
	AssetType AssetType
	Valid     bool // Valid is true if AssetType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAssetType) Scan(value interface{}) error {
	if value == nil {
		ns.AssetType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AssetType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAssetType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AssetType), nil
}

type Asset struct {
	ID                string
	ChainID           int32
	CollectionAddress string
	Type              AssetType
	CreatedAt         time.Time
	UpdatedAt         time.Time
	DecimalData       sql.NullInt16
	InitialBlock      sql.NullString
	LastUpdated       sql.NullTime
}

type Erc1155CollectionAsset struct {
	ID         uuid.UUID
	ChainID    int32
	AssetID    string
	TokenID    string
	Owner      string
	Balance    string
	Attributes pqtype.NullRawMessage
	CreatedAt  time.Time
	UpdatedAt  time.Time
}

type Erc20CollectionAsset struct {
	ID        uuid.UUID
	ChainID   int32
	AssetID   string
	Owner     string
	Balance   string
	CreatedAt time.Time
	UpdatedAt time.Time
}

type Erc721CollectionAsset struct {
	ID         uuid.UUID
	ChainID    int32
	AssetID    string
	TokenID    string
	Owner      string
	Attributes pqtype.NullRawMessage
	CreatedAt  time.Time
	UpdatedAt  time.Time
}

type OnchainHistory struct {
	ID        uuid.UUID
	From      string
	To        string
	AssetID   string
	TokenID   string
	Amount    float64
	TxHash    string
	Timestamp time.Time
	CreatedAt time.Time
	UpdatedAt time.Time
}
