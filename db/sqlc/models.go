// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type CrawlerStatus string

const (
	CrawlerStatusCRAWLING CrawlerStatus = "CRAWLING"
	CrawlerStatusCRAWLED  CrawlerStatus = "CRAWLED"
)

func (e *CrawlerStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = CrawlerStatus(s)
	case string:
		*e = CrawlerStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for CrawlerStatus: %T", src)
	}
	return nil
}

type NullCrawlerStatus struct {
	CrawlerStatus CrawlerStatus `json:"crawler_status"`
	Valid         bool          `json:"valid"` // Valid is true if CrawlerStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullCrawlerStatus) Scan(value interface{}) error {
	if value == nil {
		ns.CrawlerStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.CrawlerStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullCrawlerStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.CrawlerStatus), nil
}

type Asset struct {
	ID              string        `json:"id"`
	ChainID         int32         `json:"chain_id"`
	ContractAddress string        `json:"contract_address"`
	CreatedAt       time.Time     `json:"created_at"`
	UpdatedAt       time.Time     `json:"updated_at"`
	InitialBlock    sql.NullInt64 `json:"initial_block"`
	LastUpdated     sql.NullTime  `json:"last_updated"`
}

type Chain struct {
	ID          int32  `json:"id"`
	Chain       string `json:"chain"`
	Name        string `json:"name"`
	RpcUrl      string `json:"rpc_url"`
	ChainID     int64  `json:"chain_id"`
	Explorer    string `json:"explorer"`
	LatestBlock int64  `json:"latest_block"`
	BlockTime   int32  `json:"block_time"`
}

type OnchainHistory struct {
	ID        uuid.UUID       `json:"id"`
	From      string          `json:"from"`
	To        string          `json:"to"`
	ChainID   int32           `json:"chain_id"`
	AssetID   string          `json:"asset_id"`
	TxHash    string          `json:"tx_hash"`
	Receipt   json.RawMessage `json:"receipt"`
	EventType sql.NullString  `json:"event_type"`
	Timestamp time.Time       `json:"timestamp"`
	CreatedAt time.Time       `json:"created_at"`
	UpdatedAt time.Time       `json:"updated_at"`
}
