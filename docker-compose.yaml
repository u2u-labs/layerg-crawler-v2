version: "3.5"

services:
  crdb:
    image: cockroachdb/cockroach:v24.2.1
    container_name: crawler-db
    ports:
      - "26257:26257"
      - "8080:8080"
    command: "start-single-node --insecure  && cockroach sql --execute='CREATE DATABASE IF NOT EXISTS layerg;'"
    volumes:
      - ../data/crdb:/cockroach/cockroach-data

  redis:
    image: bitnami/redis:latest
    container_name: crawler-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
    volumes:
      - ../redis_data:/bitnami/redis/data

  #setup:
  #  image: u2labs/layerg-crawler:latest
  #  container_name: crawler-setup
  #  depends_on:
  #    - crdb
  #  volumes:
  #    - .:/app
  #  working_dir: /app
  #  entrypoint: "make"
  #  command: "prepare && make system-migrate-up && make generated-migrate-up"

  app:
    image: u2labs/layerg-crawler:latest
    container_name: crawler-app
    command: --config layerg-crawler.yaml
    volumes:
      - ./layerg-crawler.yaml:/go/bin/layerg-crawler.yaml
    depends_on:
      - crdb
      - redis
    #  - setup
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 300m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  query:
    image: u2labs/layerg-crawler:latest
    build:
      context: .
    container_name: crawler-query
    command: query --config layerg-crawler.yaml
    volumes:
      - ./layerg-crawler.yaml:/go/bin/layerg-crawler.yaml
    depends_on:
      - crdb
      - redis
   #   - setup
    ports:
      - "8084:8084"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 300m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
